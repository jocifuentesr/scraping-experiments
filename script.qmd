Este código fue compartido por LinkedIn en un post de personas que trabajan haciendo SEO con Python. El código simula la caché de sitio web que mostraba Google. 


```{python}
import requests
from bs4 import BeautifulSoup

def obtener_contenido_solo_texto_con_tamanos_y_enlaces(url):
    response = requests.get(url)

    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')

        contenido_solo_texto = ""

        for tag in soup.find_all(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'a']):
            if tag.name == 'a':
                if 'href' in tag.attrs:
                    contenido_solo_texto += f"\nEnlace: {tag['href']} - Texto: {tag.get_text(strip=True)}\n"
                else:
                    contenido_solo_texto += f"\nTexto de enlace: {tag.get_text(strip=True)}\n"
            elif tag.name.startswith('h'):
                contenido_solo_texto += f"\n{tag.name.upper()}. {tag.get_text(strip=True)}\n"
            elif tag.name == 'p':
                contenido_solo_texto += f"\n{tag.get_text(strip=True)}\n"

        return contenido_solo_texto
    else:
        return f"No se pudo acceder a la página. Código de estado: {response.status_code}"

url = input("Ingrese la URL que desea ver: ")
contenido_con_tamanos_y_enlaces = obtener_contenido_solo_texto_con_tamanos_y_enlaces(url)
print(contenido_con_tamanos_y_enlaces)
```


```{python}
import requests
from IPython.display import HTML

def simular_cache_html(url):
    headers = {
        'Cache-Control': 'max-age=3600',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
    }

    response = requests.get(url, headers=headers)

    contenido_html = response.text

    display(HTML(contenido_html))

url = input("Ingrese la URL que desea ver: ") #https://subwayspain.com/
simular_cache_html(url)
```